@inject HttpClient _client

<EditForm Model="@prescriptionItem" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Prescription: </label>
            <div>
                <InputSelect @bind-Value="prescriptionItem.Prescription" class="form-control">
                    <option value="">-- Select Prescription --</option>
                    @if (Prescriptions != null)
                    {
                        foreach (var prescription in Prescriptions)
                        {
                            <option value="@prescription.Id">@prescription.Description</option> //no proper anchor
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => prescriptionItem.PrescriptionId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Medicine: </label>
            <div>
                <InputSelect @bind-Value="prescriptionItem.Medicine" class="form-control">
                    <option value="">-- Select Medicine --</option>
                    @if (Medicines != null)
                    {
                        foreach (var medicine in Medicines)
                        {
                            <option value="@medicine.Id">@medicine.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => prescriptionItem.MedicineId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Medicine Quantity: </label>
            <div>
                <InputNumber @bind-Value="@prescriptionItem.MedicineQty" class="form-control" />
                <ValidationMessage For="@(() => prescriptionItem.MedicineQty)" />
            </div>
        </div>


        <br />
        <br />
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="staffs" />

</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public PrescriptionItem prescriptionItem { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Prescription>? Prescriptions;
    private IList<Medicine>? Medicines;


    protected async override Task OnInitializedAsync()
    {
        Prescriptions = await _client.GetFromJsonAsync<List<Prescription>>($"{Endpoints.PrescriptionsEndpoint}");
        Medicines = await _client.GetFromJsonAsync<List<Medicine>>($"{Endpoints.MedicinesEndpoint}");
    }
}
@inject HttpClient _client

<EditForm Model="@appointment" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Staff-In-Charge: </label>
            <div>
                <InputSelect @bind-Value="appointment.StaffId" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">@staff.FirstName @staff.LastName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.StaffId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Patient: </label>
            <div>
                <InputSelect @bind-Value="appointment.PatientId" class="form-control">
                    <option value="">-- Select Patient --</option>
                    @if (Patients != null)
                    {
                        foreach (var patient in Patients)
                        {
                            <option value="@patient.Id">@patient.FirstName @patient.LastName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.PatientId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Hospital: </label>
            <div>
                <InputSelect @bind-Value="appointment.HospitalId" class="form-control">
                    <option value="">-- Select Hospital --</option>
                    @if (Hospitals != null)
                    {
                        foreach (var hospital in Hospitals)
                        {
                            <option value="@hospital.Id">@hospital.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.HospitalId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Planned Date: </label>
            <div>
                <InputDate @bind-Value="@appointment.PlannedDateTime" class="form-control" />
                <ValidationMessage For="@(() => appointment.PlannedDateTime)" />
            </div>
        </div>

        <br/>
        <br/>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="appointments" />

</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Staff>? Staffs;
    private IList<Patient>? Patients;
    private IList<Hospital>? Hospitals;


    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Patients = await _client.GetFromJsonAsync<List<Patient>>($"{Endpoints.PatientsEndpoint}");
        Hospitals = await _client.GetFromJsonAsync<List<Hospital>>($"{Endpoints.HospitalsEndpoint}");
    }
}